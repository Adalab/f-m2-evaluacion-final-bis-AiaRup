"use strict";const radioInputs=document.querySelectorAll(".form__input");let numOfCards=0;const onSelectNumberOfCards=e=>{saveData(e.currentTarget.value)},onLoad=()=>{const e=getData();if(e){const a=[...radioInputs].findIndex(a=>a.value===e);radioInputs[a].checked=!0,numOfCards=parseInt(radioInputs[a].value)}else{const[e]=radioInputs;e.checked=!0,numOfCards=parseInt(e.value)}for(const e of radioInputs)e.addEventListener("change",onSelectNumberOfCards)};function getData(){return localStorage.getItem("numberOfCards")}onLoad();const saveData=e=>{localStorage.setItem("numberOfCards",e)};let firstCard=0,secondCard=0,numOfFlipped=0,numOfPairs=0,timer="",isFlippebale=!0;const checkPair=e=>{if(numOfFlipped)if(isFlippebale=!1,numOfFlipped++,(secondCard=e)===firstCard)numOfFlipped=0,isFlippebale=!0,++numOfPairs===numOfCards/2&&(clearInterval(timer),numOfPairs=0,numOfFlipped=0,isFlippebale=!0);else{numOfFlipped=0;const e=document.querySelectorAll(".card__item");for(const a of e)a.dataset.pair!==firstCard&&a.dataset.pair!==secondCard||setTimeout(()=>{a.classList.remove("flip"),isFlippebale=!0},1e3)}else numOfFlipped++,firstCard=e},cardList=document.querySelector(".card__list"),fetchButton=document.querySelector(".form__button"),pageTimer=document.querySelector(".page__timer"),basicUrl="https://raw.githubusercontent.com/Adalab/cards-data/master/";let counter=0,arrCards=[];const getNumberOfCards=()=>{const e=[...radioInputs].find(e=>!0===e.checked);return numOfCards=parseInt(e.value),e.value},onCardClick=e=>{if(isFlippebale){const{currentTarget:a}=e;a.classList.add("flip"),checkPair(a.dataset.pair)}},paintCards=e=>{cardList.innerHTML="";for(const a of e){const{pair:e,image:t}=a,r=document.createElement("li");r.classList.add("card__item"),r.setAttribute("data-pair",e);const s=document.createElement("div");s.classList.add("card__back"),s.style.backgroundImage=`url(${t})`;const n=document.createElement("div");n.style.backgroundImage="url(assets/images/front-card.png)",n.classList.add("card__front"),r.appendChild(s),r.appendChild(n),r.addEventListener("click",onCardClick),cardList.appendChild(r)}},shuffle=e=>e.sort(()=>.5-Math.random()),createArrayOfCards=e=>e.map(e=>({image:e.image,pair:e.pair})),fetchCards=e=>{const a=getNumberOfCards();fetch(`${e}${a}.json`).then(e=>e.json()).then(e=>{arrCards=shuffle(createArrayOfCards(e)),paintCards(arrCards),counter=0,pageTimer.innerHTML=counter,timer=setInterval(()=>{counter++,pageTimer.innerHTML=counter},1e3)})};fetchButton.addEventListener("click",()=>{fetchCards(basicUrl)});